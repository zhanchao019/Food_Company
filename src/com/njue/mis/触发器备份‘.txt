--对销售表添加触发器 --如果仓库里比现在少，那么就预定 SELECT
* 
FROM
	tb_goods;
DROP TRIGGER dinghuo;
CREATE TRIGGER dinghuo BEFORE INSERT ON tb_sales FOR EACH ROW
BEGIN
DECLARE
	num INT;
DECLARE
	num1 INT;

SET num = new.number;

SET num1 = ( SELECT ( number ) FROM tb_storagecheck WHERE tb_storagecheck.goodsid = new.goodsid );
IF
	num > num1 THEN
		
		SET new.state = '预定';
	ELSE 
		SET new.state = '现货';
	
END IF;

END -- 商品自动添加原料
CREATE TRIGGER addraw BEFORE INSERT ON tb_goods FOR EACH ROW
BEGIN
		INSERT INTO tb_rawmaterial ( `goodsid`, `name` )
	VALUES
		( new.id, new.rawmaterial );
	
END ALTER TABLE tb_sales ALTER COLUMN paid 
SET DEFAULT "false";
ALTER TABLE tb_salesback ALTER COLUMN paid 
SET DEFAULT "false";
DECLARE
	num INT;
DECLARE
	aim,
	tmp1,
	tmp2 INT;
	
drop TRIGGER deal;	
CREATE TRIGGER deal AFTER UPDATE ON tb_sales FOR EACH ROW
BEGIN
	DECLARE
		num INT;
	DECLARE
		minnum INT;
	DECLARE
		aim INT;
	DECLARE
		STATE VARCHAR ( 50 );
	DECLARE
		orderid VARCHAR ( 50 );
	DECLARE
		goodsid VARCHAR ( 50 );
	DECLARE
		tmp1 INT;
	DECLARE
		tmp2 INT;
	DECLARE STR VARCHAR(255);
		
	
	SET goodsid = new.goodsid;
	
	SET orderid = new.id;
	
	SET tmp1 = (SELECT ( number ) FROM ( tb_storagecheck )  WHERE (new.goodsid = goodsid) LIMIT 1 );
	
	SET tmp2 = ( SELECT ( aimval ) FROM tb_goodsschedule WHERE (new.goodsid = goodsid) LIMIT 1);
	
	SET STATE = NEW.state;
	
	SET num = new.number;
	
	SET minnum = ( SELECT ( minval ) FROM tb_goodsschedule WHERE (new.goodsid = goodsid) LIMIT 1);
	
	SET aim = tmp2 + num - tmp1;
	IF
		new.paid = 'true' THEN
		IF
			state = '预定' THEN
			SET STR = '预定新订单库存补足';
			INSERT INTO tb_schedule ( `scheduleid`, `goodsid`, `sum`,`comment` )
			VALUES
				(orderid, goodsid, aim ,STR);
			ELSE 
			UPDATE tb_storagecheck 
			SET tb_storagecheck.number = tmp1 - num 
			WHERE
				(tb_storagecheck.goodsid = new.goodsid)
			lIMIT 1;
			
				
			if tb_storagecheck.number<minnum
			then 
			SET STR = '成品出库导致库存低于阈值';
			set aim=tmp2-tb_storagecheck.number;
			INSERT INTO tb_schedule ( `scheduleid`, `goodsid`, `sum`,`comment` )
			VALUES
				( 'SH' + orderid, goodsid, aim );
				
			end if;
		END IF;
		
	END IF;

END


--schedule
 ALTER TABLE tb_schedule ALTER COLUMN s 
SET DEFAULT "false";